# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  discord: teka23/discord@0.0.1

jobs:
  pipeline:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1 \
              curl
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
            
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: "Build application Docker image"
          command: |
            docker build --cache-from=app --build-arg BG_COLOR="green" -t weatherapp-history .
      - run:
          name: "Test application in a funny way that will make my mentors ask me 'mah zeh'"
          command: |
            echo passed > $CIRCLE_ARTIFACTS/test_output.txt
          no_output_timeout: 120s
      - run:
          name: "Tag application Docker image"
          command: |
            docker tag weatherapp-history danielhabber/weatherapp-history:latest
      - run:
          name: "Login to GitLab Container Registry"
          command: |
            docker login -u $GITLAB_USERNAME -p $GITLAB_PASSWORD
      - run:
          name: "Push Docker image to GitLab Container Registry"
          command: |
            docker push danielhabber/weatherapp-history:latest
      # docker login -u $GITLAB_USERNAME -p $GITLAB_PASSWORD $GITLAB_CONTAINER_REPO_DOMAIN
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar weatherapp-history
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: "Send Test Result to Discord"
          command: |
            WEBHOOK_URL="https://discordapp.com/api/webhooks/1153634597775622166/epHqCyc4EjOJbDuR0ehdwPwCf8j8vAmkFiHwW0Kw29HWyFWC0bn9qis9dHTfihXr29pc"
            MESSAGE="Test application result:\n\`\`\`\n$(cat $CIRCLE_ARTIFACTS/test_output.txt)\n\`\`\`"
            curl -X POST -H "Content-Type: application/json" -d "{\"content\":\"$MESSAGE\"}" "$WEBHOOK_URL"
      - discord/notify:
            message: |
              Test application result:
              ```
              The test has passed!
              ```
            webhook-url: https://discordapp.com/api/webhooks/1153652751029522434/hAGWDeiJ709j9qC-VE7C1HuacOqfoCackvn_bRM0-xttM9fZhMLTxn7TSMKfVvHTjnlx

            
        
      

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  pipeline
      
