# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  pipeline:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: "Build application Docker image"
          command: |
            docker build --cache-from=app --build-arg BG_COLOR="green" -t weatherapp-history .
      - run:
          name: "Tag application Docker image"
          command: |
            docker tag weatherapp-history danielhabber/weatherapp-history:latest
      - run:
          name: "Login to GitLab Container Registry"
          command: |
            docker login -u $GITLAB_USERNAME -p $GITLAB_PASSWORD
      - run:
          name: "Push Docker image to GitLab Container Registry"
          command: |
            docker push danielhabber/weatherapp-history:latest
      # docker login -u $GITLAB_USERNAME -p $GITLAB_PASSWORD $GITLAB_CONTAINER_REPO_DOMAIN
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar weatherapp-history
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      
            
            
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  say-hello-workflow:
    jobs:
      - pipeline
      - say-hello
